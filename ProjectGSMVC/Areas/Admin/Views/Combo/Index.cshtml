@model List<ProjectGSMVC.Areas.Admin.Models.ComboViewModel>

@{
    ViewData["Title"] = "Danh sách Combo";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="pd-ltr-20 xs-pd-20-10">
    <div class="min-height-200px">
        <div class="page-header">
            <div class="row">
                <div class="col-md-12">
                    <h4 class="text-primary">Quản lý Combo</h4>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/">Trang Chủ</a></li>
                            <li class="breadcrumb-item active">Danh sách Combo</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>

        <div class="container mt-3 mb-3">
            <div class="row">
                <div class="col-md-6">
                    <a asp-controller="Combo" asp-action="Create" class="btn btn-success">
                        <i class="fa fa-plus"></i> Thêm Combo
                    </a>
                </div>
            </div>
        </div>
        <div class="row clearfix">
            @if (Model != null && Model.Any())
            {
                <div class="card shadow-sm">
                    <div class="card-body">
                        <table class="table table-striped table-hover text-center">
                            <thead class="table-dark">
                                <tr>
                                    <th>#</th>
                                    <th>Tên Combo</th>
                                    <th>Giá</th>
                                    <th>Mô Tả</th>
                                    <th>Hình Ảnh</th>
                                    <th>Hành Động</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr id="row-@item.Id">
                                        <td>@item.Id</td>
                                        <td class="fw-bold">@item.TenCombo</td>
                                        <td class="text-danger">@item.Gia.ToString("N0") VND</td>
                                        <td>@item.MoTa</td>
                                        <td>
                                            <img src="@(string.IsNullOrEmpty(item.HinhAnh) ? "/images/default-combo.png" : $"data:image/jpeg;base64,{item.HinhAnh}")"
                                                 class="rounded border"
                                                 style="width: 80px; height: 80px; object-fit: cover;">


                                        </td>
                                        <td>
                                            <div class="btn-group">
                                                <button class="btn btn-info btn-sm" onclick="showDetails(@item.Id)">
                                                    <i class="fa fa-eye"></i>
                                                </button>
                                                <button class="btn btn-warning btn-sm" onclick="openEditModal(@item.Id)">Sửa</button>
                                                <button class="btn btn-danger btn-sm" onclick="deleteCombo(@item.Id)">
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
            else
            {
                <div class="col-12 text-center">
                    <p class="alert alert-warning">Không tìm thấy combo nào.</p>
                </div>
            }
        </div>
    </div>
</div>
<div class="modal fade" id="createComboModal" tabindex="-1" aria-labelledby="createComboLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createComboLabel">Thêm Mới Combo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="createComboContent">
                <p class="text-center">Đang tải dữ liệu...</p>
            </div>
        </div>
    </div>
</div>

<!-- ✅ Modal Chỉnh Sửa Combo -->
<div class="modal fade" id="editComboModal" tabindex="-1" aria-labelledby="editComboLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editComboLabel">Chỉnh Sửa Combo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="editComboContent">
                    <p class="text-center">Đang tải dữ liệu...</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<!-- ✅ Modal Chi Tiết Combo -->
<div class="modal fade" id="comboDetailModal" tabindex="-1" aria-labelledby="comboDetailLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="comboDetailLabel">Chi Tiết Combo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="comboDetailsContent">
                    <p class="text-center">Đang tải dữ liệu...</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeEditModal()">Đóng</button>
            </div>
        </div>
    </div>
</div>



<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


<script>
    let selectedProducts = [];

    // ✅ Hiển thị modal chi tiết Combo
    function showDetails(id) {
        var modal = new bootstrap.Modal(document.getElementById('comboDetailModal'));
        modal.show();

        fetch(`/Admin/Combo/Details/${id}`)
            .then(response => response.text())
            .then(data => {
                document.getElementById("comboDetailsContent").innerHTML = data;
            })
            .catch(error => {
                document.getElementById("comboDetailsContent").innerHTML = "<p class='text-danger'>Lỗi khi tải dữ liệu!</p>";
            });
    }

    // ✅ Xóa Combo AJAX
    function deleteCombo(id) {
        if (confirm("Bạn có chắc muốn xóa combo này không?")) {
            fetch(`/Admin/Combo/Delete/${id}`, {
                method: "POST",
                headers: { "Content-Type": "application/json" }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        document.getElementById("row-" + id).remove();
                        alert("Xóa thành công!");
                    } else {
                        alert("Lỗi: " + data.message);
                    }
                })
                .catch(error => alert("Lỗi kết nối!"));
        }
    }


</script>

<script>
    function openEditModal(id) {
        // Gọi API để lấy view chỉnh sửa Combo
        fetch(`/Admin/Combo/Edit/${id}`)
            .then(response => response.text())
            .then(data => {
                document.getElementById("editComboContent").innerHTML = data;

                // Hiển thị modal sau khi tải xong dữ liệu
                var modal = new bootstrap.Modal(document.getElementById('editComboModal'));
                modal.show();
            })
            .catch(error => {
                document.getElementById("editComboContent").innerHTML = "<p class='text-danger'>Lỗi khi tải dữ liệu!</p>";
            });
    }
    function closeEditModal() {
        var modal = bootstrap.Modal.getInstance(document.getElementById('editComboModal'));
        modal.hide();
    }
</script>
<script>
    function openCreateModal() {
        fetch('/Admin/Combo/Create')
            .then(response => response.text())
            .then(data => {
                document.getElementById("createComboContent").innerHTML = data;
                var modal = new bootstrap.Modal(document.getElementById('createComboModal'));
                modal.show();
            })
            .catch(error => {
                document.getElementById("createComboContent").innerHTML = "<p class='text-danger'>Lỗi khi tải dữ liệu!</p>";
            });
    }
</script>




