@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<ProjectGSMVC.Areas.Admin.Models.TheLoaiPhimViewModel>

@{
    ViewData["Title"] = "Danh sách thể loại phim";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    int counter = 1; // Biến đếm để hiển thị số thứ tự
}

<div class="pd-ltr-20 xs-pd-20-10">
    <div class="min-height-200px">
        <div class="page-header">
            <div class="row">
                <div class="col-md-12 col-sm-12">
                    <div class="title">
                        <h4>Thể loại phim</h4>
                    </div>
                    <nav aria-label="breadcrumb" role="navigation">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("Index", "Home")">Trang chủ</a>
                            </li>
                            <li class="breadcrumb-item active" aria-current="page">Thể loại phim</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
        <div class="product-wrap">
            <div class="product-list">
                <div class="d-flex justify-content-between mb-3">
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createModal">
                        <i class="bi bi-plus-circle"></i> Thêm thể loại phim mới
                    </button>

                    <!-- Thêm trường nhập tìm kiếm -->

                    <input type="text" id="searchInput" class="form-control w-50" placeholder="Tìm kiếm thể loại phim..." />
                    <!-- Thêm nút sắp xếp -->
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-outline-primary" id="sortAZ">A-Z</button>
                        <button type="button" class="btn btn-outline-primary" id="sortZA">Z-A</button>
                    </div>
                </div>


                <ul id="genreList" class="row">
                    @foreach (var item in Model)
                    {
                        <li class="col-lg-4 col-md-6 col-sm-12 genre-item">
                            <div class="product-box">
                                <div class="product-caption">
                                    <h4><a href="#">@item.TenTheLoai</a></h4>
                                    <div class="price">
                                        <ins>@counter</ins>
                                    </div>
                                    <button class="btn btn-outline-primary" onclick="editGenre('@item.Id', '@item.TenTheLoai')">
                                        <i class="fas fa-edit"></i> Cập nhật
                                    </button>
                                    <button class="btn btn-outline-primary btnDelete" data-id="@item.Id">
                                        <i class="fas fa-trash-alt"></i> Xóa
                                    </button>
                                </div>
                            </div>
                        </li>
                        counter++;
                    }
                </ul>
                <div class="blog-pagination mb-30">
                    <div class="btn-toolbar justify-content-center mb-15">
                        <div class="btn-group" id="paginationControls">
                            <a href="#" class="btn btn-outline-primary prev">
                                <i class="fa fa-angle-double-left"></i>
                            </a>
                            <!-- Các nút trang sẽ được thêm vào đây bằng JavaScript -->
                            <a href="#" class="btn btn-outline-primary next">
                                <i class="fa fa-angle-double-right"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<!-- Modal Thêm Thể Loại -->
<div id="createModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Thêm thể loại phim mới</h5>
                <i class="bi bi-x-lg" data-bs-dismiss="modal" aria-label="Close" style="cursor: pointer;"></i>

            </div>
            <div class="modal-body">
                <input type="hidden" id="createId" />
                <input id="createTenTheLoai" type="text" class="form-control" placeholder="Tên thể loại" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="saveCreate">Thêm</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Sửa Thể Loại -->
<div id="editModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Sửa thể loại phim</h5>
                <i class="bi bi-x-lg" data-bs-dismiss="modal" aria-label="Close" style="cursor: pointer;"></i>

            </div>
            <div class="modal-body">
                <input type="hidden" id="editId" />
                <input id="editTenTheLoai" type="text" class="form-control" placeholder="Tên thể loại" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="saveEdit">Cập nhật</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
            </div>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script>
    const apiBaseUrl = "https://localhost:7141/api/TheLoaiPhim";

    $(document).ready(function () {
        /// Mảng lưu danh sách tên thể loại phim hiện có
        const existingGenres = [];

        // Lấy tất cả tên thể loại từ các phần tử hiện tại trên trang
        $('#genreList .genre-item').each(function () {
            const genreName = $(this).find('h4 a').text().trim().toLowerCase();
            existingGenres.push(genreName);
        });

        // Thêm thể loại phim
        $('#saveCreate').on('click', function () {
            const tenTheLoai = $('#createTenTheLoai').val().trim();
            let id = $('#createId').val(); // Giả sử bạn có một input ẩn cho ID

            if (!id || id === "") {
                id = guid(); // Tạo ID mới nếu chưa có
            }

            if (!tenTheLoai) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Cảnh báo!',
                    text: 'Tên thể loại không được để trống.',
                });
                return;
            }
            // Kiểm tra xem tên thể loại đã tồn tại trong mảng hay không
            if (existingGenres.includes(tenTheLoai.toLowerCase())) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Cảnh báo!',
                    text: 'Tên thể loại phim này đã tồn tại.',
                });
                return;
            }
            const data = { id, tenTheLoai };

            $.ajax({
                url: apiBaseUrl,
                type: "POST",
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function () {
                    Swal.fire({
                        icon: 'success',
                        title: 'Thành công!',
                        text: 'Thể loại phim đã được thêm.',
                    }).then(() => {
                        $('#createModal').modal('hide');
                        $('#createTenTheLoai').val('');
                        // Thêm tên thể loại vào mảng để tránh trùng trong tương lai
                        existingGenres.push(tenTheLoai.toLowerCase());
                        location.reload();
                    });
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi!',
                        text: 'Không thể thêm thể loại phim.',
                    });
                }
            });
        });

        // Xóa thể loại phim
        $(document).on('click', '.btnDelete', function () {
            const id = $(this).data('id');
            Swal.fire({
                title: 'Bạn có chắc chắn muốn xóa?',
                text: 'Thao tác này không thể hoàn tác!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy',
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `${apiBaseUrl}/${id}`,
                        type: "DELETE",
                        success: function () {
                            Swal.fire({
                                icon: 'success',
                                title: 'Thành công!',
                                text: 'Thể loại phim đã được xóa.',
                            }).then(() => {
                                location.reload();
                            });
                        },
                        error: function () {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi!',
                                text: 'Không thể xóa thể loại phim.',
                            });
                        }
                    });
                }
            });
        });

        // Hiển thị modal sửa thể loại phim
        window.editGenre = function (id, tenTheLoai) {
            $('#editId').val(id);
            $('#editTenTheLoai').val(tenTheLoai);
            $('#editModal').modal('show');
        }

        // Sửa thể loại phim
        $('#saveEdit').on('click', function () {
            const id = $('#editId').val();
            const tenTheLoai = $('#editTenTheLoai').val().trim();

            if (!tenTheLoai) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Cảnh báo!',
                    text: 'Tên thể loại không được để trống.',
                });
                return;
            }

            const data = { id, tenTheLoai };

            $.ajax({
                url: `${apiBaseUrl}/${id}`,
                type: "PUT",
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function () {
                    Swal.fire({
                        icon: 'success',
                        title: 'Thành công!',
                        text: 'Thể loại phim đã được cập nhật.',
                    }).then(() => {
                        $('#editModal').modal('hide');
                        location.reload();
                    });
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi!',
                        text: 'Không thể cập nhật thể loại phim.',
                    });
                }
            });
        });

        // Hàm tạo GUID
        function guid() {
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        }

        // Phân trang
        const itemsPerPage = 5;
        const $genreList = $('#genreList');
        const $paginationControls = $('#paginationControls');
        let currentPage = 1;
        const totalItems = $genreList.find('.genre-item').length;
        const totalPages = Math.ceil(totalItems / itemsPerPage);

        function showPage(page) {
            currentPage = page;
            const start = (currentPage - 1) * itemsPerPage;
            const end = start + itemsPerPage;
            $genreList.find('.genre-item').hide().slice(start, end).show();

            // Cập nhật các nút phân trang
            $paginationControls.find('a.page-number').remove();
            for (let i = 1; i <= totalPages; i++) {
                const $pageButton = $('<a href="#" class="btn btn-outline-primary page-number"></a>').text(i);
                if (i === currentPage) {
                    $pageButton.addClass('current');
                }
                $pageButton.insertBefore($paginationControls.find('.next'));
            }
        }

        // Hiển thị trang đầu tiên
        showPage(currentPage);

        // Xử lý khi bấm nút trang
        $paginationControls.on('click', 'a.page-number', function (e) {
            e.preventDefault();
            const page = parseInt($(this).text());
            showPage(page);
        });

        // Xử lý khi bấm nút Previous và Next
        $paginationControls.find('.prev').click(function (e) {
            e.preventDefault();
            if (currentPage > 1) {
                showPage(currentPage - 1);
            }
        });

        $paginationControls.find('.next').click(function (e) {
            e.preventDefault();
            if (currentPage < totalPages) {
                showPage(currentPage + 1);
            }
        });
    });

    //Tìm kiếm
    $('#searchInput').on('input', function () {
        const searchQuery = $(this).val().toLowerCase();
        $('#genreList .genre-item').each(function () {
            const genreName = $(this).find('h4 a').text().toLowerCase();
            if (genreName.includes(searchQuery)) {
                $(this).show();
            } else {
                $(this).hide();
            }
        });
    });

    // Sắp xếp A-Z
    $('#sortAZ').on('click', function () {
        const sortedItems = $('#genreList .genre-item').toArray().sort((a, b) => {
            const nameA = $(a).find('h4 a').text().toLowerCase();
            const nameB = $(b).find('h4 a').text().toLowerCase();
            return nameA.localeCompare(nameB);
        });
        $('#genreList').html(sortedItems);
    });

    // Sắp xếp Z-A
    $('#sortZA').on('click', function () {
        const sortedItems = $('#genreList .genre-item').toArray().sort((a, b) => {
            const nameA = $(a).find('h4 a').text().toLowerCase();
            const nameB = $(b).find('h4 a').text().toLowerCase();
            return nameB.localeCompare(nameA);
        });
        $('#genreList').html(sortedItems);
    });
</script>


