// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectGSMAUI.Api.Data;

#nullable disable

namespace ProjectGSMAUI.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241231140156_AddDuLieuToDb")]
    partial class AddDuLieuToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.ChiTietCombo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComboId")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("ChiTietCombos");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.ChiTietHoaDon", b =>
                {
                    b.Property<int>("MaChiTietHoaDon")
                        .HasColumnType("int");

                    b.Property<int?>("Gia")
                        .HasColumnType("int");

                    b.Property<int?>("MaGhe")
                        .HasColumnType("int");

                    b.Property<int?>("MaHoaDon")
                        .HasColumnType("int");

                    b.HasKey("MaChiTietHoaDon")
                        .HasName("PK__ChiTietH__CFF2C426609D1D0B");

                    b.HasIndex("MaGhe");

                    b.HasIndex("MaHoaDon");

                    b.ToTable("ChiTietHoaDon", (string)null);
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.Combo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCombo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Combos");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("MaGiamGia")
                        .HasColumnType("int");

                    b.Property<string>("MaNhap")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength();

                    b.Property<bool?>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PK__Coupon__3214EC27700E1307");

                    b.HasIndex("MaGiamGia");

                    b.ToTable("Coupon", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaGiamGia = 1,
                            MaNhap = "COUPON001",
                            TrangThai = true
                        },
                        new
                        {
                            Id = 2,
                            MaGiamGia = 1,
                            MaNhap = "COUPON002",
                            TrangThai = true
                        },
                        new
                        {
                            Id = 3,
                            MaGiamGia = 1,
                            MaNhap = "COUPON003",
                            TrangThai = false
                        },
                        new
                        {
                            Id = 4,
                            MaGiamGia = 1,
                            MaNhap = "COUPON004",
                            TrangThai = true
                        },
                        new
                        {
                            Id = 5,
                            MaGiamGia = 1,
                            MaNhap = "COUPON005",
                            TrangThai = false
                        },
                        new
                        {
                            Id = 6,
                            MaGiamGia = 1,
                            MaNhap = "COUPON006",
                            TrangThai = true
                        },
                        new
                        {
                            Id = 7,
                            MaGiamGia = 1,
                            MaNhap = "COUPON007",
                            TrangThai = false
                        },
                        new
                        {
                            Id = 8,
                            MaGiamGia = 1,
                            MaNhap = "COUPON008",
                            TrangThai = true
                        },
                        new
                        {
                            Id = 9,
                            MaGiamGia = 1,
                            MaNhap = "COUPON009",
                            TrangThai = true
                        },
                        new
                        {
                            Id = 10,
                            MaGiamGia = 1,
                            MaNhap = "COUPON010",
                            TrangThai = false
                        });
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.DatVe", b =>
                {
                    b.Property<int?>("MaDatVe")
                        .HasColumnType("int");

                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<int?>("MaVe")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("NgayDat")
                        .HasColumnType("date");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasIndex("MaKhachHang");

                    b.HasIndex("MaVe");

                    b.ToTable("DatVe", (string)null);
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.Ghe", b =>
                {
                    b.Property<string>("MaGhe")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<int?>("SoCot")
                        .HasColumnType("int");

                    b.Property<string>("SoHang")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.HasKey("MaGhe")
                        .HasName("PK__Ghe__3CD3C67B40EF14C7");

                    b.ToTable("Ghe", (string)null);
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.GiamGia", b =>
                {
                    b.Property<int>("MaGiamGia")
                        .HasColumnType("int");

                    b.Property<int?>("GiaTri")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("NgayBatDau")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("NgayKetThuc")
                        .HasColumnType("date");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenGiamGia")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaGiamGia")
                        .HasName("PK__GiamGia__EF9458E404C081C8");

                    b.ToTable("GiamGia");

                    b.HasData(
                        new
                        {
                            MaGiamGia = 1,
                            GiaTri = 20,
                            NgayBatDau = new DateOnly(2025, 1, 1),
                            NgayKetThuc = new DateOnly(2024, 6, 30),
                            SoLuong = 10,
                            TenGiamGia = "Khuyến mãi nửa đầu 2025"
                        });
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.HinhAnh", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("ID")
                        .IsFixedLength();

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<int?>("Phim")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__HinhAnh__3214EC272D4B69CB");

                    b.HasIndex("Phim");

                    b.ToTable("HinhAnh", (string)null);
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.HoaDon", b =>
                {
                    b.Property<int>("MaHoaDon")
                        .HasColumnType("int");

                    b.Property<int?>("MaDatVe")
                        .HasColumnType("int");

                    b.Property<int?>("MaGiamGia")
                        .HasColumnType("int");

                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<DateOnly?>("NgayXuat")
                        .HasColumnType("date");

                    b.Property<int?>("TinhTrang")
                        .HasColumnType("int");

                    b.Property<int?>("TongTien")
                        .HasColumnType("int");

                    b.HasKey("MaHoaDon")
                        .HasName("PK__HoaDon__835ED13B5131F5A5");

                    b.HasIndex("MaGiamGia");

                    b.HasIndex("MaKhachHang");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.KhungGio", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<TimeOnly?>("GioBatDau")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("GioKetThuc")
                        .HasColumnType("time");

                    b.HasKey("Id")
                        .HasName("PK__KhungGio__3214EC2782A9AD02");

                    b.ToTable("KhungGio", (string)null);
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.LichChieu", b =>
                {
                    b.Property<int>("MaLichChieu")
                        .HasColumnType("int");

                    b.Property<decimal?>("GiaVe")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("GioChieu")
                        .HasColumnType("int");

                    b.Property<int?>("MaPhim")
                        .HasColumnType("int");

                    b.Property<int?>("MaPhong")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("NgayChieu")
                        .HasColumnType("date");

                    b.Property<bool?>("TinhTrang")
                        .HasColumnType("bit");

                    b.HasKey("MaLichChieu")
                        .HasName("PK__LichChie__DC740197B3AF7358");

                    b.HasIndex("GioChieu");

                    b.HasIndex("MaPhim");

                    b.HasIndex("MaPhong");

                    b.ToTable("LichChieu", (string)null);
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.Phim", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("DaoDien")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("GioiHanDoTuoi")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("NgayKetThuc")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("NgayKhoiChieu")
                        .HasColumnType("date");

                    b.Property<int?>("SoSuatChieu")
                        .HasColumnType("int");

                    b.Property<string>("TenPhim")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TheLoai")
                        .HasColumnType("int");

                    b.Property<int?>("ThoiLuong")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Phim__3214EC27C9B2D53C");

                    b.HasIndex("TheLoai");

                    b.ToTable("Phim", (string)null);
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.Phong", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("LoaiPhong")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongGhe")
                        .HasColumnType("int");

                    b.Property<string>("TenPhong")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TinhTrang")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Phong__3214EC27E14F6440");

                    b.ToTable("Phong", (string)null);
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.RefreshToken", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TokenID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("refreshtoken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.SanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.TaiKhoan", b =>
                {
                    b.Property<string>("IdtaiKhoan")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("IDTaiKhoan")
                        .IsFixedLength();

                    b.Property<string>("Cccd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("CCCD")
                        .IsFixedLength();

                    b.Property<string>("DiaChi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("DiemTichLuy")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("Hinh")
                        .HasColumnType("text");

                    b.Property<string>("MatKhau")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("char(64)")
                        .IsFixedLength();

                    b.Property<DateOnly?>("NgayDangKy")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("Sdt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("SDT")
                        .IsFixedLength();

                    b.Property<string>("TenNguoiDung")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenTaiKhoan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength();

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.Property<int?>("VaiTro")
                        .HasColumnType("int");

                    b.HasKey("IdtaiKhoan")
                        .HasName("PK__TaiKhoan__BC5F907CDEBE2E2D");

                    b.ToTable("TaiKhoan", (string)null);

                    b.HasData(
                        new
                        {
                            IdtaiKhoan = "TK001",
                            Cccd = "123456789012",
                            DiaChi = "123 Đường ABC, Thành phố XYZ",
                            DiemTichLuy = 0,
                            Email = "nguyenquangquyX@gmail.com",
                            GioiTinh = true,
                            MatKhau = "8D969EEF6ECAD3C29A3A629280E686CF0C3F5D5A86AFF3CA12020C923ADC6C92",
                            NgayDangKy = new DateOnly(2024, 12, 31),
                            NgaySinh = new DateOnly(1999, 5, 19),
                            Sdt = "0973713274",
                            TenNguoiDung = "Quản trị viên",
                            TenTaiKhoan = "Admin",
                            TrangThai = 1,
                            VaiTro = 2
                        });
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.TheLoaiPhim", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("TenTheLoai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__TheLoaiP__3214EC2721C910CA");

                    b.ToTable("TheLoaiPhim", (string)null);
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.Ve", b =>
                {
                    b.Property<int>("MaVe")
                        .HasColumnType("int");

                    b.Property<string>("MaGhe")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<int?>("MaLichChieu")
                        .HasColumnType("int");

                    b.Property<int?>("MaPhim")
                        .HasColumnType("int");

                    b.Property<int?>("MaPhong")
                        .HasColumnType("int");

                    b.Property<int?>("TinhTrang")
                        .HasColumnType("int");

                    b.HasKey("MaVe")
                        .HasName("PK__Ve__2725100F2802FE7C");

                    b.HasIndex("MaGhe");

                    b.HasIndex("MaLichChieu");

                    b.ToTable("Ve", (string)null);
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.Video", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("ID")
                        .IsFixedLength();

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<int?>("Phim")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Video__3214EC27FC0AF659");

                    b.HasIndex("Phim");

                    b.ToTable("Video", (string)null);
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.ChiTietCombo", b =>
                {
                    b.HasOne("ProjectGSMAUI.Api.Data.Entities.Combo", "Combo")
                        .WithMany("ChiTietCombos")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectGSMAUI.Api.Data.Entities.SanPham", "SanPham")
                        .WithMany("ChiTietCombos")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combo");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.ChiTietHoaDon", b =>
                {
                    b.HasOne("ProjectGSMAUI.Api.Data.Entities.Ve", "MaGheNavigation")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaGhe")
                        .HasConstraintName("FK__ChiTietHo__MaGhe__59FA5E80");

                    b.HasOne("ProjectGSMAUI.Api.Data.Entities.HoaDon", "MaHoaDonNavigation")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaHoaDon")
                        .HasConstraintName("FK__ChiTietHo__MaHoa__5AEE82B9");

                    b.Navigation("MaGheNavigation");

                    b.Navigation("MaHoaDonNavigation");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.Coupon", b =>
                {
                    b.HasOne("ProjectGSMAUI.Api.Data.Entities.GiamGia", "MaGiamGiaNavigation")
                        .WithMany("Coupons")
                        .HasForeignKey("MaGiamGia")
                        .HasConstraintName("FK__Coupon__MaGiamGi__534D60F1");

                    b.Navigation("MaGiamGiaNavigation");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.DatVe", b =>
                {
                    b.HasOne("ProjectGSMAUI.Api.Data.Entities.TaiKhoan", "MaKhachHangNavigation")
                        .WithMany()
                        .HasForeignKey("MaKhachHang")
                        .HasConstraintName("FK__DatVe__MaKhachHa__4D94879B");

                    b.HasOne("ProjectGSMAUI.Api.Data.Entities.Ve", "MaVeNavigation")
                        .WithMany()
                        .HasForeignKey("MaVe")
                        .HasConstraintName("FK__DatVe__MaVe__4E88ABD4");

                    b.Navigation("MaKhachHangNavigation");

                    b.Navigation("MaVeNavigation");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.HinhAnh", b =>
                {
                    b.HasOne("ProjectGSMAUI.Api.Data.Entities.Phim", "PhimNavigation")
                        .WithMany("HinhAnhs")
                        .HasForeignKey("Phim")
                        .HasConstraintName("FK__HinhAnh__Phim__797309D9");

                    b.Navigation("PhimNavigation");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.HoaDon", b =>
                {
                    b.HasOne("ProjectGSMAUI.Api.Data.Entities.Coupon", "MaGiamGiaNavigation")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaGiamGia")
                        .HasConstraintName("FK__HoaDon__MaGiamGi__571DF1D5");

                    b.HasOne("ProjectGSMAUI.Api.Data.Entities.TaiKhoan", "MaKhachHangNavigation")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaKhachHang")
                        .HasConstraintName("FK__HoaDon__MaKhachH__5629CD9C");

                    b.Navigation("MaGiamGiaNavigation");

                    b.Navigation("MaKhachHangNavigation");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.LichChieu", b =>
                {
                    b.HasOne("ProjectGSMAUI.Api.Data.Entities.KhungGio", "GioChieuNavigation")
                        .WithMany("LichChieus")
                        .HasForeignKey("GioChieu")
                        .HasConstraintName("FK__LichChieu__GioCh__440B1D61");

                    b.HasOne("ProjectGSMAUI.Api.Data.Entities.Phim", "MaPhimNavigation")
                        .WithMany("LichChieus")
                        .HasForeignKey("MaPhim")
                        .HasConstraintName("FK__LichChieu__MaPhi__4316F928");

                    b.HasOne("ProjectGSMAUI.Api.Data.Entities.Phong", "MaPhongNavigation")
                        .WithMany("LichChieus")
                        .HasForeignKey("MaPhong")
                        .HasConstraintName("FK__LichChieu__MaPho__4222D4EF");

                    b.Navigation("GioChieuNavigation");

                    b.Navigation("MaPhimNavigation");

                    b.Navigation("MaPhongNavigation");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.Phim", b =>
                {
                    b.HasOne("ProjectGSMAUI.Api.Data.Entities.TheLoaiPhim", "TheLoaiNavigation")
                        .WithMany("Phims")
                        .HasForeignKey("TheLoai")
                        .HasConstraintName("FK__Phim__TheLoai__3B75D760");

                    b.Navigation("TheLoaiNavigation");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.Ve", b =>
                {
                    b.HasOne("ProjectGSMAUI.Api.Data.Entities.Ghe", "MaGheNavigation")
                        .WithMany("Ves")
                        .HasForeignKey("MaGhe")
                        .HasConstraintName("FK_Ve_Ghe");

                    b.HasOne("ProjectGSMAUI.Api.Data.Entities.LichChieu", "MaLichChieuNavigation")
                        .WithMany("Ves")
                        .HasForeignKey("MaLichChieu")
                        .HasConstraintName("FK__Ve__MaLichChieu__49C3F6B7");

                    b.Navigation("MaGheNavigation");

                    b.Navigation("MaLichChieuNavigation");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.Video", b =>
                {
                    b.HasOne("ProjectGSMAUI.Api.Data.Entities.Phim", "PhimNavigation")
                        .WithMany("Videos")
                        .HasForeignKey("Phim")
                        .HasConstraintName("FK__Video__Phim__7C4F7684");

                    b.Navigation("PhimNavigation");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.Combo", b =>
                {
                    b.Navigation("ChiTietCombos");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.Coupon", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.Ghe", b =>
                {
                    b.Navigation("Ves");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.GiamGia", b =>
                {
                    b.Navigation("Coupons");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.HoaDon", b =>
                {
                    b.Navigation("ChiTietHoaDons");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.KhungGio", b =>
                {
                    b.Navigation("LichChieus");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.LichChieu", b =>
                {
                    b.Navigation("Ves");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.Phim", b =>
                {
                    b.Navigation("HinhAnhs");

                    b.Navigation("LichChieus");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.Phong", b =>
                {
                    b.Navigation("LichChieus");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.SanPham", b =>
                {
                    b.Navigation("ChiTietCombos");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.TaiKhoan", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.TheLoaiPhim", b =>
                {
                    b.Navigation("Phims");
                });

            modelBuilder.Entity("ProjectGSMAUI.Api.Data.Entities.Ve", b =>
                {
                    b.Navigation("ChiTietHoaDons");
                });
#pragma warning restore 612, 618
        }
    }
}
